"use strict";(()=>{var e={};e.id=214,e.ids=[214],e.modules={166:e=>{e.exports=require("@next-auth/mongodb-adapter")},8013:e=>{e.exports=require("mongodb")},1185:e=>{e.exports=require("mongoose")},3227:e=>{e.exports=require("next-auth")},3598:e=>{e.exports=require("next-auth/providers/google")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},3240:(e,a,t)=>{t.r(a),t.d(a,{config:()=>p,default:()=>l,routeModule:()=>m});var i={};t.r(i),t.d(i,{default:()=>handle});var r=t(1802),d=t(7153),n=t(6249),o=t(1022),s=t(9061),u=t(8003);async function handle(e,a){if(await (0,o.I)(),await (0,s.isAdminRequest)(e,a),"POST"===e.method){let{email:t}=e.body;await u.w.findOne({email:t})?a.status(400).json({message:"admin already exists!"}):a.json(await u.w.create({email:t}))}if("DELETE"===e.method){let{_id:t}=e.query;await u.w.findByIdAndDelete(t),a.json(!0)}"GET"===e.method&&a.json(await u.w.find())}let l=(0,n.l)(i,"default"),p=(0,n.l)(i,"config"),m=new r.PagesAPIRouteModule({definition:{kind:d.x.PAGES_API,page:"/api/admins",pathname:"/api/admins",bundlePath:"",filename:""},userland:i})}};var a=require("../../webpack-api-runtime.js");a.C(e);var __webpack_exec__=e=>a(a.s=e),t=a.X(0,[222,61],()=>__webpack_exec__(3240));module.exports=t})();